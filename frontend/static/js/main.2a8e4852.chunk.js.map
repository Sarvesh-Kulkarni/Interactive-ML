{"version":3,"sources":["components/misc/proxyURL.js","components/lin-reg/navBar.js","components/lin-reg/about.js","components/lin-reg/train.js","components/lin-reg/test.js","components/lin-reg/result.js","components/log-reg/navBar.js","components/log-reg/about.js","components/log-reg/train.js","components/log-reg/test.js","components/log-reg/result.js","components/svm/navBar.js","components/svm/about.js","components/svm/train.js","components/svm/test.js","components/svm/result.js","components/nb/navBar.js","components/nb/about.js","components/nb/train.js","components/nb/test.js","components/nb/result.js","components/k-means/navBar.js","components/k-means/about.js","components/k-means/train.js","components/k-means/test.js","components/k-means/result.js","components/NavBar/NavBar.js","components/home/homePage.js","components/history/history.js","App.js","serviceWorker.js","index.js"],"names":["PROXY_URL","MiniNavBar","_","history","useHistory","pushLink","link","push","Grid","container","spacing","item","xs","md","xl","lg","style","display","flexDirection","alignItems","Button","variant","color","onClick","LinRegAbout","props","state","uploadFile","bind","ev","preventDefault","data","FormData","append","this","uploadInput","files","fetch","method","body","Header","size","onSubmit","accept","single","ref","type","valud","width","videoId","opts","height","playerVars","autoplay","Component","LinRegTrain","testSplit","result","e","console","log","axios","url","then","res","status","setState","event","target","value","handleSubmit","TextField","id","label","InputLabelProps","shrink","defaultValue","required","onChange","onTestSplitChange","LinRegTest","get","LinRegResult","LogRegAbout","LogRegTrain","penalty","c","FormControl","component","FormLabel","RadioGroup","aria-label","onPenaltyChange","FormControlLabel","default","control","Radio","onCChange","LogRegTest","LogRegResult","SVMAbout","SVMTrain","SVMTest","SVMResult","NBAbout","NBTrain","algo","onAlgoChange","NBTest","NBResult","KMeansAbout","KMeansTrain","k","onKChange","KMeansTest","KMeansResult","useStyles","makeStyles","theme","root","flexGrow","justifyContent","NavBar","classes","className","AppBar","position","Toolbar","Typography","HomePage","React","App","Fragment","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a8e4852.chunk.js","sourcesContent":["export const PROXY_URL = \"https://ess-ml-dashboard.herokuapp.com\";","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\n\nexport const MiniNavBar = _ => {\n\n  let history = useHistory();\n  const pushLink = link => {\n    history.push(link);\n  }\n  \n  return (\n    <div>\n      <Grid container spacing={0}>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/lin-reg')}}\n          >\n              About\n          </Button>\n        </Grid>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/lin-reg/train')}}\n              >\n              Train\n          </Button>\n        </Grid>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/lin-reg/test')}}\n              >\n              Test\n          </Button>\n        </Grid>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/lin-reg/result')}}\n              >\n              Result\n          </Button>\n        </Grid>\n      </Grid> \n    </div>      \n  );\n}\n","import React, { Component } from 'react';\nimport YouTube from 'react-youtube';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport { MiniNavBar } from './navBar';\n\nexport class LinRegAbout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.uploadFile = this.uploadFile.bind(this);\n    }\n    \n    uploadFile(ev) {\n        ev.preventDefault();\n\n        const data = new FormData();\n        data.append('file', this.uploadInput.files[0]);\n\n        fetch(PROXY_URL + '/uploads/linreg', {\n            method: 'POST',\n            body: data,\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    Linear Regression:\n                </Header>\n                <Header size='huge'>\n                    Upload the dataset (in .csv, .json or .yaml format) on which you would like to perform Linear Regression on: \n                </Header>\n                <br/>\n                <form onSubmit = { this.uploadFile }>\n                    <div>\n                        <input\n                            accept = \".csv, .json, .yml\"\n                            single ref = {\n                                (ref) => { this.uploadInput = ref; }\n                            }\n                            type = \"file\"\n                        />\n                    </div>\n                    <br />\n                    <div>\n                        <Button\n                            type = \"submit\"\n                            valud = \"Submit\"\n                            variant = \"contained\"\n                            color = \"primary\"\n                            style={{ width: '10%' }}\n                        >\n                            Upload\n                        </Button>\n                    </div>\n                </form>\n                <br />\n                <Header size='huge'>\n                    Linear Regression Background/Explanation:\n                </Header>\n                <br />\n                <YouTube\n                    videoId=\"CtKeHnfK5uA\"\n                    opts={{\n                    height: '390',\n                    width: '694',\n                    playerVars: { // https://developers.google.com/youtube/player_parameters\n                        autoplay: false\n                    }\n                    }}\n                />\n                <br />\n            </div>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport TextField from '@material-ui/core/TextField';\nimport { MiniNavBar } from './navBar';\nimport axios from 'axios';\n\nexport class LinRegTrain extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            testSplit: 0.2,\n            result: [],\n        };\n    };\n\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log(this.state.testSplit);\n\n        axios({\n            method: \"POST\",\n            url: PROXY_URL + \"/train/linreg\",\n            data: [this.state.testSplit]\n        }).then((res) => {\n            if(res.status === 200){\n            console.log(\"SUCCESSS\")\n            const result = res.data;\n            console.log(result)\n            this.setState({ result });\n            console.log(this.result)\n        }else\n            console.log(\"SOMETHING WENT WRONG\")\n        })\n    }\n\n    onTestSplitChange(event) {\n        this.setState({ testSplit: event.target.value })\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    Linear Regression:\n                </Header>\n                <br /><br />\n                <Grid container spacing={0}>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Insert Hyperparameters:\n                    </Header>\n                    <br />\n                    <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n                        <Button type=\"submit\" value=\"Submit\" style={{ width: '21%' }} variant=\"contained\" color=\"primary\">Train</Button>\n                        <br /><br /><br />\n                        <div>\n                            <TextField\n                                id=\"testSplit\"\n                                label=\"TestSplit (0 > Value > 1)\"\n                                type=\"number\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                variant=\"outlined\"\n                                defaultValue={'0.2'}\n                                required\n                                value={this.state.testSplit}\n                                onChange={this.onTestSplitChange.bind(this)}\n                            />\n                        </div>\n                    </form>\n                </Grid>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                </Grid>\n            </Grid>\n        </div>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport { MiniNavBar } from './navBar';\nimport axios from 'axios';\n\nexport class LinRegTest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: [],\n        };\n    };\n\n    handleSubmit() {\n        axios.get(PROXY_URL + '/test/linreg')\n            .then(res => {\n                const result = res.data;\n                this.setState({ result });\n      })\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    Linear Regression:\n                </Header>\n                <br /><br />\n                <Grid container spacing={0}>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Test:\n                    </Header>\n                    <br />\n                    <form onSubmit={this.handleSubmit.bind(this)} method=\"GET\">\n                        <Button type=\"submit\" value=\"Submit\" style={{ width: '21%' }} variant=\"contained\" color=\"primary\">Test</Button>\n                    </form>\n                </Grid>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                </Grid>\n            </Grid>\n        </div>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport { MiniNavBar } from './navBar';\nimport axios from 'axios';\n\nexport class LinRegResult extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: [],\n        };\n    };\n\n    handleSubmit() {\n        axios.get(PROXY_URL + '/test/linreg')\n            .then(res => {\n                const result = res.data;\n                this.setState({ result });\n      })\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    Linear Regression:\n                </Header>\n                <br /><br />\n                <Grid container spacing={0}>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                    <br />\n                    <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n                        <Button type=\"submit\" value=\"Submit\" style={{ width: '21%' }} variant=\"contained\" color=\"primary\">Result</Button>\n                    </form>\n                </Grid>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                </Grid>\n            </Grid>\n        </div>\n        );\n    }\n};","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\n\nexport const MiniNavBar = _ => {\n\n  let history = useHistory();\n  const pushLink = link => {\n    history.push(link);\n  }\n  \n  return (\n    <div>\n      <Grid container spacing={0}>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/log-reg')}}\n          >\n              About\n          </Button>\n        </Grid>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/log-reg/train')}}\n              >\n              Train\n          </Button>\n        </Grid>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/log-reg/test')}}\n              >\n              Test\n          </Button>\n        </Grid>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/log-reg/result')}}\n              >\n              Result\n          </Button>\n        </Grid>\n      </Grid> \n    </div>      \n  );\n}\n","import React, { Component } from 'react';\nimport YouTube from 'react-youtube';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport { MiniNavBar } from './navBar';\n\nexport class LogRegAbout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.uploadFile = this.uploadFile.bind(this);\n    }\n    \n    uploadFile(ev) {\n        ev.preventDefault();\n\n        const data = new FormData();\n        data.append('file', this.uploadInput.files[0]);\n\n        fetch(PROXY_URL + '/uploads/logreg', {\n            method: 'POST',\n            body: data,\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    Logistic Regression:\n                </Header>\n                <Header size='huge'>\n                    Upload the dataset (in .csv, .json or .yaml format) on which you would like to perform Logistic Regression on: \n                </Header>\n                <br/>\n                <form onSubmit = { this.uploadFile }>\n                    <div>\n                        <input\n                            accept = \".csv, .json, .yml\"\n                            single ref = {\n                                (ref) => { this.uploadInput = ref; }\n                            }\n                            type = \"file\"\n                        />\n                    </div>\n                    <br />\n                    <div>\n                        <Button\n                            type = \"submit\"\n                            valud = \"Submit\"\n                            variant = \"contained\"\n                            color = \"primary\"\n                            style={{ width: '10%' }}\n                        >\n                            Upload\n                        </Button>\n                    </div>\n                </form>\n                <br />\n                <Header size='huge'>\n                    Logistic Regression Background/Explanation:\n                </Header>\n                <br />\n                <YouTube\n                    videoId=\"7qJ7GksOXoA\"\n                    opts={{\n                    height: '390',\n                    width: '694',\n                    playerVars: { // https://developers.google.com/youtube/player_parameters\n                        autoplay: false\n                    }\n                    }}\n                />\n                <br />\n            </div>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport { MiniNavBar } from './navBar';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport axios from 'axios';\n\nexport class LogRegTrain extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            testSplit: '0.2',\n            penalty: 'l2',\n            c: '1',\n            result: [],\n        };\n    };\n\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log(this.state.testSplit, this.state.penalty, this.state.c);\n\n        axios({\n            method: \"POST\",\n            url: PROXY_URL + \"/train/logreg\",\n            data: [this.state.testSplit, this.state.penalty, this.state.c]\n        }).then((res) => {\n            if(res.status === 200){\n            console.log(\"SUCCESSS\")\n            const result = res.data;\n            console.log(result)\n            this.setState({ result });\n            console.log(this.result)\n        }else\n            console.log(\"SOMETHING WENT WRONG\")\n        })\n    }\n\n    onTestSplitChange(event) {\n        this.setState({testSplit: event.target.value})\n    }\n\n    onPenaltyChange(event) {\n        this.setState({penalty: event.target.value})\n    }\n\n    onCChange(event) {\n        this.setState({c: event.target.value})\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    Logistic Regression:\n                </Header>\n                <br /><br />\n                <Grid container spacing={0}>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Insert Hyperparameters:\n                    </Header>\n                    <br />\n                    <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n                        <Button type=\"submit\" value=\"Submit\" style={{ width: '21%' }} variant=\"contained\" color=\"primary\">Train</Button>\n                        <br /><br /><br />\n                        <div>\n                            <TextField\n                                id=\"testSplit\"\n                                label=\"TestSplit (0 > Value > 1)\"\n                                type=\"number\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                variant=\"outlined\"\n                                defaultValue={'0.2'}\n                                required\n                                value={this.state.testSplit}\n                                onChange={this.onTestSplitChange.bind(this)}\n                            />\n                        </div>\n                        <br /><br />\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Penalty</FormLabel>\n                            <RadioGroup aria-label=\"penalty\" required value={this.state.penalty} onChange={this.onPenaltyChange.bind(this)}>\n                                <FormControlLabel default value=\"l1\" control={<Radio />} label=\"L1\" />\n                                <FormControlLabel value=\"l2\" control={<Radio />} label=\"L2\" />\n                            </RadioGroup>\n                        </FormControl>\n                        <br /><br /><br />\n                        <div>\n                            <TextField\n                                id=\"c\"\n                                label=\"C (0 > Value > 1)\"\n                                type=\"number\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                variant=\"outlined\"\n                                defaultValue={1}\n                                required\n                                value={this.state.c}\n                                onChange={this.onCChange.bind(this)}\n                            />\n                        </div>\n                    </form>\n                </Grid>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                </Grid>\n            </Grid>\n        </div>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport { MiniNavBar } from './navBar';\nimport axios from 'axios';\n\nexport class LogRegTest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: [],\n        };\n    };\n\n    handleSubmit() {\n        axios.get(PROXY_URL + '/test/logreg')\n            .then(res => {\n                const result = res.data;\n                this.setState({ result });\n      })\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    Logistic Regression:\n                </Header>\n                <br /><br />\n                <Grid container spacing={0}>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Test:\n                    </Header>\n                    <br />\n                    <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n                        <Button type=\"submit\" value=\"Submit\" style={{ width: '21%' }} variant=\"contained\" color=\"primary\">Test</Button>\n                    </form>\n                </Grid>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                </Grid>\n            </Grid>\n        </div>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport { MiniNavBar } from './navBar';\nimport axios from 'axios';\n\nexport class LogRegResult extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: [],\n        };\n    };\n\n    handleSubmit() {\n        axios.get(PROXY_URL + '/test/logreg')\n            .then(res => {\n                const result = res.data;\n                this.setState({ result });\n      })\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    Logistic Regression:\n                </Header>\n                <br /><br />\n                <Grid container spacing={0}>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                    <br />\n                    <form onSubmit={this.handleSubmit.bind(this)} method=\"GET\">\n                        <Button type=\"submit\" value=\"Submit\" style={{ width: '21%' }} variant=\"contained\" color=\"primary\">Result</Button>\n                    </form>\n                </Grid>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                </Grid>\n            </Grid>\n        </div>\n        );\n    }\n};","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\n\nexport const MiniNavBar = _ => {\n\n  let history = useHistory();\n  const pushLink = link => {\n    history.push(link);\n  }\n  \n  return (\n    <div>\n      <Grid container spacing={0}>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/svm')}}\n          >\n              About\n          </Button>\n        </Grid>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/svm/train')}}\n              >\n              Train\n          </Button>\n        </Grid>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/svm/test')}}\n              >\n              Test\n          </Button>\n        </Grid>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/svm/result')}}\n              >\n              Result\n          </Button>\n        </Grid>\n      </Grid> \n    </div>      \n  );\n}\n","import React, { Component } from 'react';\nimport YouTube from 'react-youtube';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport { MiniNavBar } from './navBar';\n\nexport class SVMAbout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.uploadFile = this.uploadFile.bind(this);\n    }\n    \n    uploadFile(ev) {\n        ev.preventDefault();\n\n        const data = new FormData();\n        data.append('file', this.uploadInput.files[0]);\n\n        fetch(PROXY_URL + '/uploads/svm', {\n            method: 'POST',\n            body: data,\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    Support Vector Machine:\n                </Header>\n                <Header size='huge'>\n                    Upload the dataset (in .csv, .json or .yaml format) on which you would like to perform SVM on: \n                </Header>\n                <br/>\n                <form onSubmit = { this.uploadFile }>\n                    <div>\n                        <input\n                            accept = \".csv, .json, .yml\"\n                            single ref = {\n                                (ref) => { this.uploadInput = ref; }\n                            }\n                            type = \"file\"\n                        />\n                    </div>\n                    <br />\n                    <div>\n                        <Button\n                            type = \"submit\"\n                            valud = \"Submit\"\n                            variant = \"contained\"\n                            color = \"primary\"\n                            style={{ width: '10%' }}\n                        >\n                            Upload\n                        </Button>\n                    </div>\n                </form>\n                <br />\n                <Header size='huge'>\n                    Support Vector Machine Background/Explanation:\n                </Header>\n                <br />\n                <YouTube\n                    videoId=\"Y6RRHw9uN9o\"\n                    opts={{\n                    height: '390',\n                    width: '694',\n                    playerVars: { // https://developers.google.com/youtube/player_parameters\n                        autoplay: false\n                    }\n                    }}\n                />\n                <br />\n            </div>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { MiniNavBar } from './navBar';\nimport axios from 'axios';\n\nexport class SVMTrain extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            testSplit: '0.2',\n            penalty: 'l2',\n            c: '1',\n            result: [],\n        };\n    };\n\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log(this.state.testSplit, this.state.penalty, this.state.c);\n\n        axios({\n            method: \"POST\",\n            url: PROXY_URL + \"/train/svm\",\n            data: [this.state.testSplit, this.state.penalty, this.state.c]\n        }).then((res) => {\n            if(res.status === 200){\n            console.log(\"SUCCESSS\")\n            const result = res.data;\n            console.log(result)\n            this.setState({ result });\n            console.log(this.result)   \n        }else\n            console.log(\"SOMETHING WENT WRONG\")\n        })\n    }\n\n    onTestSplitChange(event) {\n        this.setState({testSplit: event.target.value})\n    }\n\n    onPenaltyChange(event) {\n        this.setState({penalty: event.target.value})\n    }\n\n    onCChange(event) {\n        this.setState({c: event.target.value})\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    Support Vector Machine:\n                </Header>\n                <br /><br />\n                <Grid container spacing={0}>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Insert Hyperparameters:\n                    </Header>\n                    <br />\n                    <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n                        <Button type=\"submit\" value=\"Submit\" style={{ width: '21%' }} variant=\"contained\" color=\"primary\">Train</Button>\n                        <br /><br /><br />\n                        <div>\n                            <TextField\n                                id=\"testSplit\"\n                                label=\"TestSplit (0 > Value > 1)\"\n                                type=\"number\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                variant=\"outlined\"\n                                defaultValue={'0.2'}\n                                required\n                                value={this.state.testSplit}\n                                onChange={this.onTestSplitChange.bind(this)}\n                            />\n                        </div>\n                        <br /><br />\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Penalty</FormLabel>\n                            <RadioGroup aria-label=\"penalty\" required value={this.state.penalty} onChange={this.onPenaltyChange.bind(this)}>\n                                <FormControlLabel default value=\"l1\" control={<Radio />} label=\"L1\" />\n                                <FormControlLabel value=\"l2\" control={<Radio />} label=\"L2\" />\n                            </RadioGroup>\n                        </FormControl>\n                        <br /><br /><br />\n                        <div>\n                            <TextField\n                                id=\"c\"\n                                label=\"C (0 > Value > 1)\"\n                                type=\"number\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                variant=\"outlined\"\n                                defaultValue={1}\n                                required\n                                value={this.state.c}\n                                onChange={this.onCChange.bind(this)}\n                            />\n                        </div>\n                    </form>\n                </Grid>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                </Grid>\n            </Grid>\n        </div>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport { MiniNavBar } from './navBar';\nimport axios from 'axios';\n\nexport class SVMTest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: [],\n        };\n    };\n\n    handleSubmit() {\n        axios.get(PROXY_URL + '/test/svm')\n            .then(res => {\n                const result = res.data;\n                this.setState({ result });\n      })\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    Support Vector Machine:\n                </Header>\n                <br /><br />\n                <Grid container spacing={0}>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Test:\n                    </Header>\n                    <br />\n                    <form onSubmit={this.handleSubmit.bind(this)} method=\"GET\">\n                        <Button type=\"submit\" value=\"Submit\" style={{ width: '21%' }} variant=\"contained\" color=\"primary\">Test</Button>\n                    </form>\n                </Grid>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                </Grid>\n            </Grid>\n        </div>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport { MiniNavBar } from './navBar';\nimport axios from 'axios';\n\nexport class SVMResult extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: [],\n        };\n    };\n\n    handleSubmit() {\n        axios.get(PROXY_URL + '/result/svm')\n            .then(res => {\n                const result = res.data;\n                this.setState({ result });\n      })\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    Support Vector Machine:\n                </Header>\n                <br /><br />\n                <Grid container spacing={0}>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                    <br />\n                    <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n                        <Button type=\"submit\" value=\"Submit\" style={{ width: '21%' }} variant=\"contained\" color=\"primary\">Result</Button>\n                    </form>\n                </Grid>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                </Grid>\n            </Grid>\n        </div>\n        );\n    }\n};","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\n\nexport const MiniNavBar = _ => {\n\n  let history = useHistory();\n  const pushLink = link => {\n    history.push(link);\n  }\n  \n  return (\n    <div>\n      <Grid container spacing={0}>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/nb')}}\n          >\n              About\n          </Button>\n        </Grid>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/nb/train')}}\n              >\n              Train\n          </Button>\n        </Grid>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/nb/test')}}\n              >\n              Test\n          </Button>\n        </Grid>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/nb/result')}}\n              >\n              Result\n          </Button>\n        </Grid>\n      </Grid> \n    </div>      \n  );\n}\n","import React, { Component } from 'react';\nimport YouTube from 'react-youtube';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport { MiniNavBar } from './navBar';\n\nexport class NBAbout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.uploadFile = this.uploadFile.bind(this);\n    }\n    \n    uploadFile(ev) {\n        ev.preventDefault();\n\n        const data = new FormData();\n        data.append('file', this.uploadInput.files[0]);\n\n        fetch(PROXY_URL + '/uploads/nb', {\n            method: 'POST',\n            body: data,\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    Naive Bayes:\n                </Header>\n                <Header size='huge'>\n                    Upload the dataset (in .csv, .json or .yaml format) on which you would like to perform SVM on: \n                </Header>\n                <br/>\n                <form onSubmit = { this.uploadFile }>\n                    <div>\n                        <input\n                            accept = \".csv, .json, .yml\"\n                            single ref = {\n                                (ref) => { this.uploadInput = ref; }\n                            }\n                            type = \"file\"\n                        />\n                    </div>\n                    <br />\n                    <div>\n                        <Button\n                            type = \"submit\"\n                            valud = \"Submit\"\n                            variant = \"contained\"\n                            color = \"primary\"\n                            style={{ width: '10%' }}\n                        >\n                            Upload\n                        </Button>\n                    </div>\n                </form>\n                <br />\n                <Header size='huge'>\n                    Naive Bayes Background/Explanation:\n                </Header>\n                <br />\n                <YouTube\n                    videoId=\"CPqOCI0ahss\"\n                    opts={{\n                    height: '390',\n                    width: '694',\n                    playerVars: { // https://developers.google.com/youtube/player_parameters\n                        autoplay: false\n                    }\n                    }}\n                />\n                <br />\n            </div>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { MiniNavBar } from './navBar';\nimport axios from 'axios';\n\nexport class NBTrain extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            testSplit: '0.2',\n            algo: '1',\n            result: [],\n        };\n    };\n\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log(this.state.testSplit, this.state.algo);\n\n        axios({\n            method: \"POST\",\n            url: PROXY_URL + \"/train/nb\",\n            data: [this.state.testSplit, this.state.algo]\n        }).then((res) => {\n            if(res.status === 200){\n            console.log(\"SUCCESSS\")\n            const result = res.data;\n            console.log(result)\n            this.setState({ result });\n            console.log(this.result)\n        }else\n            console.log(\"SOMETHING WENT WRONG\")\n        })\n    }\n\n    onTestSplitChange(event) {\n        this.setState({testSplit: event.target.value})\n    }\n\n    onAlgoChange(event) {\n        this.setState({algo: event.target.value})\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    Naive Bayes:\n                </Header>\n                <br /><br />\n                <Grid container spacing={0}>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Insert Hyperparameters:\n                    </Header>\n                    <br />\n                    <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n                        <Button type=\"submit\" value=\"Submit\" style={{ width: '21%' }} variant=\"contained\" color=\"primary\">Train</Button>\n                        <br /><br /><br />\n                        <div>\n                            <TextField\n                                id=\"testSplit\"\n                                label=\"TestSplit (0 > Value > 1)\"\n                                type=\"number\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                variant=\"outlined\"\n                                defaultValue={'0.2'}\n                                required\n                                value={this.state.testSplit}\n                                onChange={this.onTestSplitChange.bind(this)}\n                            />\n                        </div>\n                        <br /><br />\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Algorithm</FormLabel>\n                            <RadioGroup aria-label=\"algorithm\" required value={this.state.algo} onChange={this.onAlgoChange.bind(this)}>\n                                <FormControlLabel default value=\"1\" control={<Radio />} label=\"BernoulliNB\" />\n                                <FormControlLabel value=\"2\" control={<Radio />} label=\"CategoricalNB\" />\n                                <FormControlLabel value=\"3\" control={<Radio />} label=\"ComplementNB\" />\n                                <FormControlLabel value=\"4\" control={<Radio />} label=\"GaussianNB\" />\n                                <FormControlLabel value=\"5\" control={<Radio />} label=\"MultinominalNB\" />\n                            </RadioGroup>\n                        </FormControl>\n                    </form>\n                </Grid>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                </Grid>\n            </Grid>\n        </div>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport { MiniNavBar } from './navBar';\nimport axios from 'axios';\n\nexport class NBTest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: [],\n        };\n    };\n\n    handleSubmit() {\n        axios.get(PROXY_URL + '/test/nb')\n            .then(res => {\n                const result = res.data;\n                this.setState({ result });\n      })\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    Naive Bayes:\n                </Header>\n                <br /><br />\n                <Grid container spacing={0}>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Test:\n                    </Header>\n                    <br />\n                    <form onSubmit={this.handleSubmit.bind(this)} method=\"GET\">\n                        <Button type=\"submit\" value=\"Submit\" style={{ width: '21%' }} variant=\"contained\" color=\"primary\">Test</Button>\n                    </form>\n                </Grid>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                </Grid>\n            </Grid>\n        </div>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport { MiniNavBar } from './navBar';\nimport axios from 'axios';\n\nexport class NBResult extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: [],\n        };\n    };\n\n    handleSubmit() {\n        axios.get(PROXY_URL + '/result/svm')\n            .then(res => {\n                const result = res.data;\n                this.setState({ result });\n      })\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    Support Vector Machine:\n                </Header>\n                <br /><br />\n                <Grid container spacing={0}>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                    <br />\n                    <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n                        <Button type=\"submit\" value=\"Submit\" style={{ width: '21%' }} variant=\"contained\" color=\"primary\">Result</Button>\n                    </form>\n                </Grid>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                </Grid>\n            </Grid>\n        </div>\n        );\n    }\n};","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\n\nexport const MiniNavBar = _ => {\n\n  let history = useHistory();\n  const pushLink = link => {\n    history.push(link);\n  }\n  \n  return (\n    <div>\n      <Grid container spacing={0}>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/k-means')}}\n          >\n              About\n          </Button>\n        </Grid>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/k-means/train')}}\n              >\n              Train\n          </Button>\n        </Grid>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/k-means/test')}}\n              >\n              Test\n          </Button>\n        </Grid>\n        <Grid item xs={3} md={3} xl={3} lg={3} style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        }}>\n          <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{pushLink('/k-means/result')}}\n              >\n              Result\n          </Button>\n        </Grid>\n      </Grid> \n    </div>      \n  );\n}\n","import React, { Component } from 'react';\nimport YouTube from 'react-youtube';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport { MiniNavBar } from './navBar';\n\nexport class KMeansAbout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.uploadFile = this.uploadFile.bind(this);\n    }\n    \n    uploadFile(ev) {\n        ev.preventDefault();\n\n        const data = new FormData();\n        data.append('file', this.uploadInput.files[0]);\n\n        fetch(PROXY_URL + '/uploads/kmeans', {\n            method: 'POST',\n            body: data,\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    K-Means Clustering:\n                </Header>\n                <Header size='huge'>\n                    Upload the dataset (in .csv, .json or .yaml format) on which you would like to perform K-Means on: \n                </Header>\n                <br />\n                <form onSubmit = { this.uploadFile }>\n                    <div>\n                        <input\n                            accept = \".csv, .json, .yml\"\n                            single ref = {\n                                (ref) => { this.uploadInput = ref; }\n                            }\n                            type = \"file\"\n                        />\n                    </div>\n                    <br />\n                    <div>\n                        <Button\n                            type = \"submit\"\n                            valud = \"Submit\"\n                            variant = \"contained\"\n                            color = \"primary\"\n                            style={{ width: '10%' }}\n                        >\n                            Upload\n                        </Button>\n                    </div>\n                </form>\n                <br />\n                <Header size='huge'>\n                    K-Means Clustering Background/Explanation:\n                </Header>\n                <br />\n                <YouTube\n                    videoId=\"_aWzGGNrcic\"\n                    opts={{\n                    height: '390',\n                    width: '694',\n                    playerVars: { // https://developers.google.com/youtube/player_parameters\n                        autoplay: false\n                    }\n                    }}\n                />\n            </div>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport TextField from '@material-ui/core/TextField';\nimport { MiniNavBar } from './navBar';\nimport axios from 'axios';\n\nexport class KMeansTrain extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            k: 2,\n            result: [],\n        };\n    };\n\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log(this.state.k);\n\n        axios({\n            method: \"POST\",\n            url: PROXY_URL + \"/train/kmeans\",\n            data: [this.state.k]\n        }).then((res) => {\n            if(res.status === 200){\n            console.log(\"SUCCESSS\")\n            const result = res.data;\n            console.log(result)\n            this.setState({ result });\n            console.log(this.result)\n        }else\n            console.log(\"SOMETHING WENT WRONG\")\n        })\n    }\n\n    onKChange(event) {\n        this.setState({ k: event.target.value })\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    K-Means Clustering:\n                </Header>\n                <br /><br />\n                <Grid container spacing={0}>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Insert Hyperparameters:\n                    </Header>\n                    <br />\n                    <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n                        <Button type=\"submit\" value=\"Submit\" style={{ width: '21%' }} variant=\"contained\" color=\"primary\">Train</Button>\n                        <br /><br /><br />\n                        <div>\n                            <TextField\n                                id=\"k\"\n                                label=\"K (Value >= 2)\"\n                                type=\"number\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                variant=\"outlined\"\n                                defaultValue={'2'}\n                                required\n                                value={this.state.k}\n                                onChange={this.onKChange.bind(this)}\n                            />\n                        </div>\n                    </form>\n                </Grid>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                </Grid>\n            </Grid>\n        </div>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport { MiniNavBar } from './navBar';\nimport axios from 'axios';\n\nexport class KMeansTest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: [],\n        };\n    };\n\n    handleSubmit() {\n        axios.get(PROXY_URL + '/test/kmeans')\n            .then(res => {\n                const result = res.data;\n                this.setState({ result });\n      })\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    K-Means Clustering:\n                </Header>\n                <br /><br />\n                <Grid container spacing={0}>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Test:\n                    </Header>\n                    <br />\n                    <form onSubmit={this.handleSubmit.bind(this)} method=\"GET\">\n                        <Button type=\"submit\" value=\"Submit\" style={{ width: '21%' }} variant=\"contained\" color=\"primary\">Test</Button>\n                    </form>\n                </Grid>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                </Grid>\n            </Grid>\n        </div>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { PROXY_URL } from '../misc/proxyURL';\nimport { MiniNavBar } from './navBar';\nimport axios from 'axios';\n\nexport class KMeansResult extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: [],\n        };\n    };\n\n    handleSubmit() {\n        axios.get(PROXY_URL + '/test/kmeans')\n            .then(res => {\n                const result = res.data;\n                this.setState({ result });\n      })\n    }\n\n    render() {\n        return (\n            <div>\n                <MiniNavBar />\n                <br /><br />\n                <Header size='huge'>\n                    K-Means Clustering:\n                </Header>\n                <br /><br />\n                <Grid container spacing={0}>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                    <br />\n                    <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n                        <Button type=\"submit\" value=\"Submit\" style={{ width: '21%' }} variant=\"contained\" color=\"primary\">Result</Button>\n                    </form>\n                </Grid>\n                <Grid item xs={6} style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'left'\n                }}>\n                    <Header size = 'huge'>\n                        Result:\n                    </Header>\n                </Grid>\n            </Grid>\n        </div>\n        );\n    }\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n}));\n\nexport const NavBar = _ => {\n  const classes = useStyles();\n  let history = useHistory();\n  const pushLink = link => {\n    history.push(link);\n  }\n  \n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"h6\" color=\"inherit\">\n            Machine Learning\n          </Typography>\n        </Toolbar>\n        <div>\n          <Button style={{ width: '16.6%' }} color=\"inherit\" onClick={()=>{pushLink('/')}}>Home</Button>\n          <Button style={{ width: '16.6%' }} color=\"inherit\" onClick={()=>{pushLink('/lin-reg')}}>Linear Regression</Button>\n          <Button style={{ width: '16.6%' }} color=\"inherit\" onClick={()=>{pushLink('/log-reg')}}>Logistic Regression</Button>\n          <Button style={{ width: '16.6%' }} color=\"inherit\" onClick={()=>{pushLink('/svm')}}>Support Vector Machine</Button>\n          <Button style={{ width: '16.6%' }} color=\"inherit\" onClick={()=>{pushLink('/nb')}}>Naive Bayes</Button>\n          <Button style={{ width: '16.6%' }} color=\"inherit\" onClick={()=>{pushLink('/k-means')}}>K-Means Clustering</Button>\n        </div>\n      </AppBar> \n    </div>      \n  );\n}\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\nimport './homePage.css';\n\nclass HomePage extends React.Component {\n    \n    render() {\n        return (\n            <div className = 'home-page'>\n                <Header size = 'huge'>\n                    ABC!\n                </Header>\n                <Header size = 'huge'>\n                    XYZ\n                </Header>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { LinRegAbout } from './components/lin-reg/about';\nimport { LinRegTrain } from './components/lin-reg/train';\nimport { LinRegTest } from './components/lin-reg/test';\nimport { LinRegResult } from './components/lin-reg/result';\nimport { LogRegAbout } from './components/log-reg/about';\nimport { LogRegTrain } from './components/log-reg/train';\nimport { LogRegTest } from './components/log-reg/test';\nimport { LogRegResult } from './components/log-reg/result';\nimport { SVMAbout } from './components/svm/about';\nimport { SVMTrain } from './components/svm/train';\nimport { SVMTest } from './components/svm/test';\nimport { SVMResult } from './components/svm/result';\nimport { NBAbout } from './components/nb/about';\nimport { NBTrain } from './components/nb/train';\nimport { NBTest } from './components/nb/test';\nimport { NBResult } from './components/nb/result';\nimport { KMeansAbout } from './components/k-means/about';\nimport { KMeansTrain } from './components/k-means/train';\nimport { KMeansTest } from './components/k-means/test';\nimport { KMeansResult } from './components/k-means/result';\nimport { NavBar } from './components/NavBar/NavBar';\nimport HomePage from './components/home/homePage';\nimport history from './components/history/history';\nimport './App.css';\n\nexport default class App extends Component {\n    render() {\n        return (\n            <BrowserRouter history={history} >\n                <React.Fragment >\n                    <NavBar/>\n                    <div className = \"main-content\" >\n                        <Switch>\n                            <Route path = \"/\" exact\n                            component = { HomePage }\n                            />{\" \"}\n                            <Route path = \"/lin-reg\" exact \n                            component = { LinRegAbout }\n                            />{\" \"}\n                            <Route path = \"/lin-reg/train\" exact \n                            component = { LinRegTrain }\n                            />{\" \"}\n                            <Route path = \"/lin-reg/test\" exact \n                            component = { LinRegTest }\n                            />{\" \"}\n                            <Route path = \"/lin-reg/result\" exact\n                            component = { LinRegResult }\n                            />{\" \"}\n                            <Route path = \"/log-reg\" exact \n                            component = { LogRegAbout }\n                            />{\" \"}\n                            <Route path = \"/log-reg/train\" exact \n                            component = { LogRegTrain }\n                            />{\" \"}\n                            <Route path = \"/log-reg/test\" exact \n                            component = { LogRegTest }\n                            />{\" \"}\n                            <Route path = \"/log-reg/result\" exact\n                            component = { LogRegResult }\n                            />{\" \"}\n                            <Route path = \"/svm\" exact\n                            component = { SVMAbout }\n                            />{\" \"}\n                            <Route path = \"/svm/train\" exact \n                            component = { SVMTrain }\n                            />{\" \"}\n                            <Route path = \"/svm/test\" exact \n                            component = { SVMTest }\n                            />{\" \"}\n                            <Route path = \"/svm/result\" exact\n                            component = { SVMResult }\n                            />{\" \"}\n                            <Route path = \"/nb\" exact\n                            component = { NBAbout }\n                            />{\" \"}\n                            <Route path = \"/nb/train\" exact \n                            component = { NBTrain }\n                            />{\" \"}\n                            <Route path = \"/nb/test\" exact \n                            component = { NBTest }\n                            />{\" \"}\n                            <Route path = \"/nb/result\" exact\n                            component = { NBResult }\n                            />{\" \"}\n                            <Route path = \"/k-means\" exact\n                            component = { KMeansAbout }\n                            />{\" \"}\n                            <Route path = \"/k-means/train\" exact \n                            component = { KMeansTrain }\n                            />{\" \"}\n                            <Route path = \"/k-means/test\" exact \n                            component = { KMeansTest }\n                            />{\" \"}\n                            <Route path = \"/k-means/result\" exact\n                            component = { KMeansResult }\n                            />{\" \"}\n                        </Switch>{\" \"}\n                    </div>{\" \"} \n                </React.Fragment>{\" \"} \n            </BrowserRouter>\n        );\n    }\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\nimport 'katex/dist/katex.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}